- name: Create wireguard configuration
  shell: |
    {% set peer = hostvars[item] %}
    {% set ifname = peer.wg_peer_ifname.replace('-', '_') %}

    if ! uci -q show network.{{ ifname }} > /dev/null; then
      uci set network.{{ ifname }}=interface
    fi
    uci set network.{{ ifname }}.proto=wireguard
    uci set network.{{ ifname }}.private_key={{ wg_private_key }}
    uci set network.{{ ifname }}.listen_port={{ peer.wg_peer_port }}

    if ! uci -q show network.@wireguard_{{ ifname }}[0] > /dev/null; then
      uci add network wireguard_{{ ifname }}
    fi
    uci set network.@wireguard_{{ ifname }}[0].public_key={{ peer.wg_public_key }}
    uci set network.@wireguard_{{ ifname }}[0].endpoint_host={{ peer.ansible_host }}
    uci set network.@wireguard_{{ ifname }}[0].endpoint_port=2300
    uci set network.@wireguard_{{ ifname }}[0].persistent_keepalive=15
    uci del network.@wireguard_{{ ifname }}[0].allowed_ips
    uci add_list network.@wireguard_{{ ifname }}[0].allowed_ips=0.0.0.0/0

    uci changes | grep -v allowed_ips

    uci commit
  register: uci_wireguard
  changed_when: "uci_wireguard.stdout"
  with_items: '{{ groups.Concentrators }}'
- name: Restart network
  when: uci_wireguard.changed
  command: "/etc/init.d/network restart"
